webpackJsonp([0],{

/***/ 21:
/* unknown exports provided */
/* all exports used */
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function($) {let getUserMedia = __webpack_require__(/*! getusermedia */ 8);\nlet Peer = __webpack_require__(/*! simple-peer */ 10);\n\nlet kvServer = 'http://localhost:9000';\nlet roomName = getParameterByName('r');\nconsole.log('welcome to room', roomName);\nlet myId, otherId, peer;\n\nfunction getParameterByName(name, url) {\n  if (!url) {\n    url = window.location.href;\n  }\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nfunction setup(isInitiator) {\n  let role = isInitiator ? 'a' : 'b';\n  let otherRole = isInitiator ? 'b' : 'a';\n  getUserMedia({ video: false, audio: true }, function (err, stream) {\n    if (err) return console.error(err);\n    peer = new Peer({\n      initiator: isInitiator,\n      trickle: false,\n      stream: stream\n    });\n    peer.on('signal', function (data) {\n      $.ajax({\n        url: kvServer + '/kv/v1/keys',\n        method: 'POST',\n        data: {\n          key: roomName + '-' + role,\n          val: JSON.stringify(data)\n        }\n      });\n      document.getElementById('yourId').value = JSON.stringify(data);\n    });\n\n    document.getElementById('connect').addEventListener('click', function () {\n      console.log('going to connect to role', otherRole);\n      if (otherId) {\n        console.log('signaling role', otherRole);\n        peer.signal(otherId);\n      } else {\n        console.log('we dont have otherId so going to call');\n        $.ajax({ // there is no otherID \n          url: kvServer + `/kv/v1/keys/${roomName}-${otherRole}`,\n          method: 'GET',\n          success: function (data) {\n            console.log('signaling role', otherRole);\n            peer.signal(data);\n          },\n          error: err => {\n            console.log('failed to get roleID ', otherRole);\n          }\n        });\n      }\n    });\n\n    document.getElementById('send').addEventListener('click', function () {\n      let yourMessage = document.getElementById('yourMessage').value;\n      peer.send(yourMessage);\n    });\n\n    peer.on('data', function (data) {\n      document.getElementById('messages').textContent += data + '\\n';\n    });\n\n    peer.on('stream', function (stream) {\n      let video = document.createElement('video');\n      document.body.appendChild(video);\n\n      video.src = window.URL.createObjectURL(stream);\n      video.play();\n    });\n  });\n}\n\nlet getOtherId = $.ajax({\n  url: kvServer + `/kv/v1/keys/${roomName}-a`,\n  method: 'GET'\n});\ngetOtherId.fail(err => {\n  // you are the first one. initiate!\n  console.log('other side is not setup yet');\n  setup(true);\n});\ngetOtherId.done(data => {\n  // someone else is already here. ( or didn't cleanup after leaving )\n  console.log('otherId is ', data);\n  otherId = data;\n  setup(false);\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! jquery */ 9)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NsaWVudC9tYWluLmpzPzlhMzIiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IGdldFVzZXJNZWRpYSA9IHJlcXVpcmUoJ2dldHVzZXJtZWRpYScpO1xubGV0IFBlZXIgPSByZXF1aXJlKCdzaW1wbGUtcGVlcicpO1xuXG5sZXQga3ZTZXJ2ZXIgPSAnaHR0cDovL2xvY2FsaG9zdDo5MDAwJztcbmxldCByb29tTmFtZSA9IGdldFBhcmFtZXRlckJ5TmFtZSgncicpO1xuY29uc29sZS5sb2coJ3dlbGNvbWUgdG8gcm9vbScgLCByb29tTmFtZSk7XG5sZXQgbXlJZCxvdGhlcklkLHBlZXI7XG5cbmZ1bmN0aW9uIGdldFBhcmFtZXRlckJ5TmFtZShuYW1lLCB1cmwpIHtcbiAgICBpZiAoIXVybCkge1xuICAgICAgdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gICAgfVxuICAgIG5hbWUgPSBuYW1lLnJlcGxhY2UoL1tcXFtcXF1dL2csIFwiXFxcXCQmXCIpO1xuICAgIHZhciByZWdleCA9IG5ldyBSZWdFeHAoXCJbPyZdXCIgKyBuYW1lICsgXCIoPShbXiYjXSopfCZ8I3wkKVwiKSxcbiAgICAgICAgcmVzdWx0cyA9IHJlZ2V4LmV4ZWModXJsKTtcbiAgICBpZiAoIXJlc3VsdHMpIHJldHVybiBudWxsO1xuICAgIGlmICghcmVzdWx0c1syXSkgcmV0dXJuICcnO1xuICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQocmVzdWx0c1syXS5yZXBsYWNlKC9cXCsvZywgXCIgXCIpKTtcbn1cblxuZnVuY3Rpb24gc2V0dXAoaXNJbml0aWF0b3Ipe1xuICBsZXQgcm9sZSA9IGlzSW5pdGlhdG9yID8gJ2EnIDogJ2InO1xuICBsZXQgb3RoZXJSb2xlID0gaXNJbml0aWF0b3IgPyAnYicgOiAnYSc7XG4gIGdldFVzZXJNZWRpYSh7IHZpZGVvOiBmYWxzZSwgYXVkaW86IHRydWUgfSwgZnVuY3Rpb24gKGVyciwgc3RyZWFtKSB7XG4gICAgaWYgKGVycikgcmV0dXJuIGNvbnNvbGUuZXJyb3IoZXJyKVxuICAgIHBlZXIgPSBuZXcgUGVlcih7XG4gICAgICBpbml0aWF0b3I6IGlzSW5pdGlhdG9yLFxuICAgICAgdHJpY2tsZTogZmFsc2UsXG4gICAgICBzdHJlYW06IHN0cmVhbVxuICAgIH0pXG4gICAgcGVlci5vbignc2lnbmFsJywgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICQuYWpheCh7XG4gICAgICAgIHVybDoga3ZTZXJ2ZXIgKyAnL2t2L3YxL2tleXMnLFxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIGtleTogcm9vbU5hbWUgKyAnLScgKyByb2xlICxcbiAgICAgICAgICB2YWw6IEpTT04uc3RyaW5naWZ5KGRhdGEpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgneW91cklkJykudmFsdWUgPSBKU09OLnN0cmluZ2lmeShkYXRhKVxuICAgIH0pXG5cbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29ubmVjdCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zb2xlLmxvZygnZ29pbmcgdG8gY29ubmVjdCB0byByb2xlJyxvdGhlclJvbGUpO1xuICAgICAgaWYob3RoZXJJZCl7IFxuICAgICAgICBjb25zb2xlLmxvZygnc2lnbmFsaW5nIHJvbGUnLG90aGVyUm9sZSk7XG4gICAgICAgIHBlZXIuc2lnbmFsKG90aGVySWQpO1xuICAgICAgfWVsc2V7XG4gICAgICAgIGNvbnNvbGUubG9nKCd3ZSBkb250IGhhdmUgb3RoZXJJZCBzbyBnb2luZyB0byBjYWxsJyk7XG4gICAgICAgICQuYWpheCh7IC8vIHRoZXJlIGlzIG5vIG90aGVySUQgXG4gICAgICAgICAgdXJsOiBrdlNlcnZlciArIGAva3YvdjEva2V5cy8ke3Jvb21OYW1lfS0ke290aGVyUm9sZX1gLFxuICAgICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSl7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnc2lnbmFsaW5nIHJvbGUnLG90aGVyUm9sZSk7XG4gICAgICAgICAgICBwZWVyLnNpZ25hbChkYXRhKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGVycm9yOiBlcnIgPT57XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnZmFpbGVkIHRvIGdldCByb2xlSUQgJyxvdGhlclJvbGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICAgIFxuICAgIH0pXG5cbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VuZCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgbGV0IHlvdXJNZXNzYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3lvdXJNZXNzYWdlJykudmFsdWVcbiAgICAgIHBlZXIuc2VuZCh5b3VyTWVzc2FnZSlcbiAgICB9KVxuXG4gICAgcGVlci5vbignZGF0YScsIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWVzc2FnZXMnKS50ZXh0Q29udGVudCArPSBkYXRhICsgJ1xcbidcbiAgICB9KVxuXG4gICAgcGVlci5vbignc3RyZWFtJywgZnVuY3Rpb24gKHN0cmVhbSkge1xuICAgICAgbGV0IHZpZGVvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndmlkZW8nKVxuICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh2aWRlbylcblxuICAgICAgdmlkZW8uc3JjID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoc3RyZWFtKVxuICAgICAgdmlkZW8ucGxheSgpXG4gICAgfSlcbiAgfSlcbn1cblxuXG5sZXQgZ2V0T3RoZXJJZCA9ICQuYWpheCh7XG4gIHVybDoga3ZTZXJ2ZXIgKyBgL2t2L3YxL2tleXMvJHtyb29tTmFtZX0tYWAsXG4gIG1ldGhvZDogJ0dFVCdcbn0pXG5nZXRPdGhlcklkLmZhaWwoZXJyID0+IHtcbiAgLy8geW91IGFyZSB0aGUgZmlyc3Qgb25lLiBpbml0aWF0ZSFcbiAgY29uc29sZS5sb2coJ290aGVyIHNpZGUgaXMgbm90IHNldHVwIHlldCcpO1xuICBzZXR1cCh0cnVlKTtcbn0pO1xuZ2V0T3RoZXJJZC5kb25lKGRhdGEgPT4ge1xuICAvLyBzb21lb25lIGVsc2UgaXMgYWxyZWFkeSBoZXJlLiAoIG9yIGRpZG4ndCBjbGVhbnVwIGFmdGVyIGxlYXZpbmcgKVxuICBjb25zb2xlLmxvZygnb3RoZXJJZCBpcyAnLGRhdGEpO1xuICBvdGhlcklkID0gZGF0YTtcbiAgc2V0dXAoZmFsc2UpO1xufSlcblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jbGllbnQvbWFpbi5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUhBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBV0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ })

},[21]);