webpackJsonp([0],{

/***/ 21:
/* unknown exports provided */
/* all exports used */
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function($) {let getUserMedia = __webpack_require__(/*! getusermedia */ 8);\nlet Peer = __webpack_require__(/*! simple-peer */ 10);\n\nlet kvServer = 'http://localhost:9000';\nlet roomName = getParameterByName('r');\nconsole.log('welcome to room', roomName);\nlet myId, otherId, peer, myRole, otherRole;\n\nfunction getParameterByName(name, url) {\n  if (!url) {\n    url = window.location.href;\n  }\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nfunction setup(isInitiator) {\n  myRole = isInitiator ? 'a' : 'b';\n  otherRole = isInitiator ? 'b' : 'a';\n  getUserMedia({ video: false, audio: true }, function (err, stream) {\n    if (err) return console.error(err);\n    peer = new Peer({\n      initiator: isInitiator,\n      trickle: false,\n      stream: stream\n    });\n    peer.on('signal', function (data) {\n      $.ajax({\n        url: kvServer + '/kv/v1/keys',\n        method: 'POST',\n        data: {\n          key: roomName + '-' + myRole,\n          val: JSON.stringify(data)\n        }\n      });\n      document.getElementById('yourId').value = JSON.stringify(data);\n    });\n\n    document.getElementById('connect').addEventListener('click', function () {\n      console.log('going to connect to role', otherRole);\n      if (otherId) {\n        console.log('signaling role', otherRole);\n        peer.signal(otherId);\n      } else {\n        console.log('we dont have otherId so going to call');\n        $.ajax({ // there is no otherID \n          url: kvServer + `/kv/v1/keys/${roomName}-${otherRole}`,\n          method: 'GET',\n          success: function (data) {\n            console.log('signaling role', otherRole);\n            peer.signal(data);\n          },\n          error: err => {\n            console.log('failed to get roleID ', otherRole);\n          }\n        });\n      }\n    });\n\n    document.getElementById('send').addEventListener('click', function () {\n      let yourMessage = document.getElementById('yourMessage').value;\n      peer.send(yourMessage);\n    });\n\n    peer.on('data', function (data) {\n      document.getElementById('messages').textContent += data + '\\n';\n    });\n\n    peer.on('stream', function (stream) {\n      let video = document.createElement('video');\n      document.body.appendChild(video);\n\n      video.src = window.URL.createObjectURL(stream);\n      video.play();\n    });\n  });\n}\n\nlet getOtherId = $.ajax({\n  url: kvServer + `/kv/v1/keys/${roomName}-a`,\n  method: 'GET'\n});\ngetOtherId.fail(err => {\n  // you are the first one. initiate!\n  console.log('other side is not setup yet');\n  setup(true);\n});\ngetOtherId.done(data => {\n  // someone else is already here. ( or didn't cleanup after leaving )\n  console.log('otherId is ', data);\n  otherId = data;\n  setup(false);\n});\n\n$('button#reset').on('click', e => {\n  $.ajax({\n    url: kvServer + `/kv/v1/keys/${roomName}-${myRole}`,\n    type: 'DELETE'\n  });\n  $.ajax({\n    url: kvServer + `/kv/v1/keys/${roomName}-${otherRole}`,\n    type: 'DELETE'\n  });\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! jquery */ 9)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NsaWVudC9tYWluLmpzPzlhMzIiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IGdldFVzZXJNZWRpYSA9IHJlcXVpcmUoJ2dldHVzZXJtZWRpYScpO1xubGV0IFBlZXIgPSByZXF1aXJlKCdzaW1wbGUtcGVlcicpO1xuXG5sZXQga3ZTZXJ2ZXIgPSAnaHR0cDovL2xvY2FsaG9zdDo5MDAwJztcbmxldCByb29tTmFtZSA9IGdldFBhcmFtZXRlckJ5TmFtZSgncicpO1xuY29uc29sZS5sb2coJ3dlbGNvbWUgdG8gcm9vbScgLCByb29tTmFtZSk7XG5sZXQgbXlJZCxvdGhlcklkLHBlZXIsbXlSb2xlLG90aGVyUm9sZTtcblxuZnVuY3Rpb24gZ2V0UGFyYW1ldGVyQnlOYW1lKG5hbWUsIHVybCkge1xuICAgIGlmICghdXJsKSB7XG4gICAgICB1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgICB9XG4gICAgbmFtZSA9IG5hbWUucmVwbGFjZSgvW1xcW1xcXV0vZywgXCJcXFxcJCZcIik7XG4gICAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cChcIls/Jl1cIiArIG5hbWUgKyBcIig9KFteJiNdKil8JnwjfCQpXCIpLFxuICAgICAgICByZXN1bHRzID0gcmVnZXguZXhlYyh1cmwpO1xuICAgIGlmICghcmVzdWx0cykgcmV0dXJuIG51bGw7XG4gICAgaWYgKCFyZXN1bHRzWzJdKSByZXR1cm4gJyc7XG4gICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChyZXN1bHRzWzJdLnJlcGxhY2UoL1xcKy9nLCBcIiBcIikpO1xufVxuXG5mdW5jdGlvbiBzZXR1cChpc0luaXRpYXRvcil7XG4gIG15Um9sZSA9IGlzSW5pdGlhdG9yID8gJ2EnIDogJ2InO1xuICBvdGhlclJvbGUgPSBpc0luaXRpYXRvciA/ICdiJyA6ICdhJztcbiAgZ2V0VXNlck1lZGlhKHsgdmlkZW86IGZhbHNlLCBhdWRpbzogdHJ1ZSB9LCBmdW5jdGlvbiAoZXJyLCBzdHJlYW0pIHtcbiAgICBpZiAoZXJyKSByZXR1cm4gY29uc29sZS5lcnJvcihlcnIpXG4gICAgcGVlciA9IG5ldyBQZWVyKHtcbiAgICAgIGluaXRpYXRvcjogaXNJbml0aWF0b3IsXG4gICAgICB0cmlja2xlOiBmYWxzZSxcbiAgICAgIHN0cmVhbTogc3RyZWFtXG4gICAgfSlcbiAgICBwZWVyLm9uKCdzaWduYWwnLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgJC5hamF4KHtcbiAgICAgICAgdXJsOiBrdlNlcnZlciArICcva3YvdjEva2V5cycsXG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAga2V5OiByb29tTmFtZSArICctJyArIG15Um9sZSAsXG4gICAgICAgICAgdmFsOiBKU09OLnN0cmluZ2lmeShkYXRhKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3lvdXJJZCcpLnZhbHVlID0gSlNPTi5zdHJpbmdpZnkoZGF0YSlcbiAgICB9KVxuXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nvbm5lY3QnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2dvaW5nIHRvIGNvbm5lY3QgdG8gcm9sZScsb3RoZXJSb2xlKTtcbiAgICAgIGlmKG90aGVySWQpeyBcbiAgICAgICAgY29uc29sZS5sb2coJ3NpZ25hbGluZyByb2xlJyxvdGhlclJvbGUpO1xuICAgICAgICBwZWVyLnNpZ25hbChvdGhlcklkKTtcbiAgICAgIH1lbHNle1xuICAgICAgICBjb25zb2xlLmxvZygnd2UgZG9udCBoYXZlIG90aGVySWQgc28gZ29pbmcgdG8gY2FsbCcpO1xuICAgICAgICAkLmFqYXgoeyAvLyB0aGVyZSBpcyBubyBvdGhlcklEIFxuICAgICAgICAgIHVybDoga3ZTZXJ2ZXIgKyBgL2t2L3YxL2tleXMvJHtyb29tTmFtZX0tJHtvdGhlclJvbGV9YCxcbiAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpe1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ3NpZ25hbGluZyByb2xlJyxvdGhlclJvbGUpO1xuICAgICAgICAgICAgcGVlci5zaWduYWwoZGF0YSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBlcnJvcjogZXJyID0+e1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2ZhaWxlZCB0byBnZXQgcm9sZUlEICcsb3RoZXJSb2xlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgICBcbiAgICB9KVxuXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlbmQnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGxldCB5b3VyTWVzc2FnZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd5b3VyTWVzc2FnZScpLnZhbHVlXG4gICAgICBwZWVyLnNlbmQoeW91ck1lc3NhZ2UpXG4gICAgfSlcblxuICAgIHBlZXIub24oJ2RhdGEnLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21lc3NhZ2VzJykudGV4dENvbnRlbnQgKz0gZGF0YSArICdcXG4nXG4gICAgfSlcblxuICAgIHBlZXIub24oJ3N0cmVhbScsIGZ1bmN0aW9uIChzdHJlYW0pIHtcbiAgICAgIGxldCB2aWRlbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ZpZGVvJylcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodmlkZW8pXG5cbiAgICAgIHZpZGVvLnNyYyA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKHN0cmVhbSlcbiAgICAgIHZpZGVvLnBsYXkoKVxuICAgIH0pXG4gIH0pXG59XG5cblxubGV0IGdldE90aGVySWQgPSAkLmFqYXgoe1xuICB1cmw6IGt2U2VydmVyICsgYC9rdi92MS9rZXlzLyR7cm9vbU5hbWV9LWFgLFxuICBtZXRob2Q6ICdHRVQnXG59KVxuZ2V0T3RoZXJJZC5mYWlsKGVyciA9PiB7XG4gIC8vIHlvdSBhcmUgdGhlIGZpcnN0IG9uZS4gaW5pdGlhdGUhXG4gIGNvbnNvbGUubG9nKCdvdGhlciBzaWRlIGlzIG5vdCBzZXR1cCB5ZXQnKTtcbiAgc2V0dXAodHJ1ZSk7XG59KTtcbmdldE90aGVySWQuZG9uZShkYXRhID0+IHtcbiAgLy8gc29tZW9uZSBlbHNlIGlzIGFscmVhZHkgaGVyZS4gKCBvciBkaWRuJ3QgY2xlYW51cCBhZnRlciBsZWF2aW5nIClcbiAgY29uc29sZS5sb2coJ290aGVySWQgaXMgJyxkYXRhKTtcbiAgb3RoZXJJZCA9IGRhdGE7XG4gIHNldHVwKGZhbHNlKTtcbn0pXG5cbiQoJ2J1dHRvbiNyZXNldCcpLm9uKCdjbGljaycsIGUgPT4ge1xuICAkLmFqYXgoe1xuICAgIHVybDoga3ZTZXJ2ZXIgKyBgL2t2L3YxL2tleXMvJHtyb29tTmFtZX0tJHtteVJvbGV9YCxcbiAgICB0eXBlOiAnREVMRVRFJ1xuICB9KVxuICAkLmFqYXgoe1xuICAgIHVybDoga3ZTZXJ2ZXIgKyBgL2t2L3YxL2tleXMvJHtyb29tTmFtZX0tJHtvdGhlclJvbGV9YCxcbiAgICB0eXBlOiAnREVMRVRFJ1xuICB9KVxufSlcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2NsaWVudC9tYWluLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSEE7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVEE7QUFXQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ })

},[21]);